/*
 * This file is generated by jOOQ.
 */
package domains.tables.records;


import domains.tables.Answers;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswersRecord extends UpdatableRecordImpl<AnswersRecord> implements Record4<Integer, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Answers.answer_id</code>.
     */
    public void setAnswerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Answers.answer_id</code>.
     */
    public Integer getAnswerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Answers.question</code>.
     */
    public void setQuestion(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Answers.question</code>.
     */
    public Integer getQuestion() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Answers.is_right</code>.
     */
    public void setIsRight(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Answers.is_right</code>.
     */
    public Integer getIsRight() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Answers.answer</code>.
     */
    public void setAnswer(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Answers.answer</code>.
     */
    public String getAnswer() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Answers.ANSWERS.ANSWER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Answers.ANSWERS.QUESTION;
    }

    @Override
    public Field<Integer> field3() {
        return Answers.ANSWERS.IS_RIGHT;
    }

    @Override
    public Field<String> field4() {
        return Answers.ANSWERS.ANSWER;
    }

    @Override
    public Integer component1() {
        return getAnswerId();
    }

    @Override
    public Integer component2() {
        return getQuestion();
    }

    @Override
    public Integer component3() {
        return getIsRight();
    }

    @Override
    public String component4() {
        return getAnswer();
    }

    @Override
    public Integer value1() {
        return getAnswerId();
    }

    @Override
    public Integer value2() {
        return getQuestion();
    }

    @Override
    public Integer value3() {
        return getIsRight();
    }

    @Override
    public String value4() {
        return getAnswer();
    }

    @Override
    public AnswersRecord value1(Integer value) {
        setAnswerId(value);
        return this;
    }

    @Override
    public AnswersRecord value2(Integer value) {
        setQuestion(value);
        return this;
    }

    @Override
    public AnswersRecord value3(Integer value) {
        setIsRight(value);
        return this;
    }

    @Override
    public AnswersRecord value4(String value) {
        setAnswer(value);
        return this;
    }

    @Override
    public AnswersRecord values(Integer value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnswersRecord
     */
    public AnswersRecord() {
        super(Answers.ANSWERS);
    }

    /**
     * Create a detached, initialised AnswersRecord
     */
    public AnswersRecord(Integer answerId, Integer question, Integer isRight, String answer) {
        super(Answers.ANSWERS);

        setAnswerId(answerId);
        setQuestion(question);
        setIsRight(isRight);
        setAnswer(answer);
    }
}
